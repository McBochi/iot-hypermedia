# Room Temperature Visualization
### Requirements
 - Location discovery infrastructure `start_location_descriptions.sh`
 - Light bulb server `start_lightbulb.sh`
 - Thermostat server `start_thermostat.sh`


##Script
Import Java Hypermedia client using the Actinium module loading system.
````javascript
h = require("hypermedia")
````
Register a debugging request inspector that logs all the requests performed by the Hypermedia Client.
````javascript
h.Inspector.clear();
h.Inspector.addRequestInspector(new h.RequestInspector({
  startRequest: function(id, method, url, p1, p2){
    log(method+" "+url);
  }
}));
````
Define a `HeatingStateFuture` by extending the `CoREHalResourceFuture` class defined by the Hypermedia Client. The heating state future object defines the functions `setTargetTemperature` that sets the target temperature by submitting the form with the link relationship `edit`.
````javascript

HeatingStateFuture = extend("HeatingStateFuture", h.CoREHalResourceFuture, {
  getMediaType: function() {
    return "application/x.heating-state+json";
  },
  setTargetTemperature: function(targetTemperature) {
    this.getFormRequest("edit", targetTemperature.unit, targetTemperature).get();
  },
  getJS: function(){
    var val = this.get();
    val.eagerLoad();
    return JSON.parse(val.toString());
  }
});
````
Define a `LightingStateFuture` by extending the `CoREHalResourceFuture` class defined by the Hypermedia Client. The lighting state future object defines the functions `setRGB`, `setHSV`, and `setBrightness` that modify the state of the resource by submitting the form with the link relationship `edit`.
````javascript
LightingStateFuture = extend("LightingStateFuture", h.CoREHalResourceFuture, {
  getMediaType: function() {
    return "application/x.lighting-state+json";
  },
  
  setRGB: function(r,g,b) {
    var rgb = {r:r,g:g,b:b};
    this.getFormRequest("edit", "rgb", {
      value: rgb,
      type: "rgb"
    }).get();
  },
  
  setHSV: function(h,s,v) {
    var value = {hue:h,saturation:s,brightness:v};
    this.getFormRequest("edit", "hsv", {
      value: value,
      type: "hsv"
    }).get();
  },
  
  setBrightness: function(brightness) {
    var value = {brightness:brightness};
    this.getFormRequest("edit", "brightness", {
      value: value,
      type: "brightness"
    }).get();
  },
  
  getJS: function(){
    var val = this.get();
    val.eagerLoad();
    return JSON.parse(val.toString());
  }
});
````
Start define a Hypermedia Client instance that starts from the entry point resource directory. 
````javascript
client = new h.Client("coap://localhost:5783/")
````
Load the resources registered in the entry point resource directory and use the `ThingCrawler` to discover a thing description registered at the location `/CH/ETH/CAB/51` that defines a link with the link relation name `lighting-state`.
````javascript
lightbulb = client.resources()
              .use(new h.ThingCrawler())
              .withLocationName("/CH/ETH/CAB/51")
              .findFirst(function (t){
                  return t.hasLink("lighting-state");
              });
````
Use the light bulb thing description to load the `lighting-state` resource. The resource is described using the previously defined `LightingStateFuture` class.
````javascript
lightstate = lightbulb.followLink("lighting-state", function(){
  return new LightingStateFuture();
})
````
Find thermostat thing description at the location `/CH/ETH/CAB/51` using `ThingCrawler`.
````javascript
thermostat = client.resources()
              .use(new h.ThingCrawler())
              .withLocationName("/CH/ETH/CAB/51")
              .findFirst(function (t){
                  return t.hasLink("heating-state");
              });
````

Use the thermostat thing description to load the `heating-state` resource. The resource is described using the previously defined `HeatingStateFuture` class.
````javascript
temperature = thermostat.followLink("heating-state", function(){
  return new HeatingStateFuture();
})
````
Observe temperature state resource and visualise current room temperature using the lightbulb color. The temperature range 11°C - 42°C is mapped to the color range blue to red.
 
````javascript
relation = temperature.observe().onChange(function(item){
    var temp = item.get("temperature");
    var blue = 175.0;
    var blue_temp = 11.0;
    var red = 359.0;
    var red_temp = 42.0;
    var temp_diff = (red_temp-blue_temp);
    var color_diff = (red-blue);
    var hue = (temp-blue_temp)/temp_diff*color_diff+blue;
    lightstate.setHSV(hue,1,1)
})
````
Set target temperature to 30 degrees celsius.
````javascript
temperature.setTargetTemperature({
    "unit":"celsius", 
    "targetTemperature":30
});
````
The following line can be used to stop the observation of the temperature resource.
````javascript
//relation.stop()
````
